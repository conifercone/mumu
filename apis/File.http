### 文件上传
< {%
  import {generateHeaders} from "./utils"

  const headers = generateHeaders(request.environment.get("storage-service-url"))
  request.variables.set("signature", headers.signature)
  request.variables.set("timestamp", headers.timestamp)
  request.variables.set("requestId", headers.requestId)
%}
POST {{storage-service-url}}/file/upload
Content-Type: multipart/form-data; boundary=WebAppBoundary
X-Request-ID: {{requestId}}
X-Signature: {{signature}}
X-Timestamp: {{timestamp}}
Connection: keep-alive
Accept: */*
Authorization: Bearer {{$auth.token("admin")}}

--WebAppBoundary
Content-Disposition: form-data; name="storageZone"
Content-Type: text/plain

test
--WebAppBoundary
Content-Disposition: form-data; name="file"; filename="test.txt"
Content-Type: application/json

< ./assets/test.txt
--WebAppBoundary--

> {%
  client.test("Request executed successfully", function () {
    client.assert(response.status === 200, "Response status is not 200");
    // noinspection JSUnresolvedReference
    client.global.set("fileMetadataId", response.body.data);
  });
%}

### 根据文件元数据ID删除指定文件
< {%
  import {generateHeaders} from "./utils"

  const headers = generateHeaders(request.environment.get("storage-service-url"))
  request.variables.set("signature", headers.signature)
  request.variables.set("timestamp", headers.timestamp)
  request.variables.set("requestId", headers.requestId)
%}
DELETE {{storage-service-url}}/file/deleteByMetadataId/{{fileMetadataId}}
Content-Type: application/json
X-Request-ID: {{requestId}}
X-Signature: {{signature}}
X-Timestamp: {{timestamp}}
Connection: keep-alive
Accept: */*
Authorization: Bearer {{$auth.token("admin")}}

> {%
  client.test("Request executed successfully", function () {
    client.assert(response.status === 200, "Response status is not 200");
  });
%}

### 根据文件元数据ID下载指定文件
< {%
  import {generateHeaders} from "./utils"

  const headers = generateHeaders(request.environment.get("storage-service-url"))
  request.variables.set("signature", headers.signature)
  request.variables.set("timestamp", headers.timestamp)
  request.variables.set("requestId", headers.requestId)
%}
GET {{storage-service-url}}/file/downloadByMetadataId/{{fileMetadataId}}
Content-Type: application/json
X-Request-ID: {{requestId}}
X-Signature: {{signature}}
X-Timestamp: {{timestamp}}
Connection: keep-alive
Accept: */*
Authorization: Bearer {{$auth.token("admin")}}

> {%
  client.test("Request executed successfully", function () {
    client.assert(response.status === 200, "Response status is not 200");
  });
%}

### 根据文件元数据ID获取元数据信息
< {%
  import {generateHeaders} from "./utils"

  const headers = generateHeaders(request.environment.get("storage-service-url"))
  request.variables.set("signature", headers.signature)
  request.variables.set("timestamp", headers.timestamp)
  request.variables.set("requestId", headers.requestId)
%}
GET {{storage-service-url}}/file/findFileMetadataByMetadataId/{{fileMetadataId}}
Content-Type: application/json
X-Request-ID: {{requestId}}
X-Signature: {{signature}}
X-Timestamp: {{timestamp}}
Connection: keep-alive
Accept: */*
Authorization: Bearer {{$auth.token("admin")}}

> {%
  client.test("Request executed successfully", function () {
    client.assert(response.status === 200, "Response status is not 200");
  });
%}
