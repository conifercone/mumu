### 流式文件上传
< {%
  import {generateHeaders} from "./utils"

  const headers = generateHeaders(request.environment.get("file-service-url"))
  request.variables.set("signature", headers.signature)
  request.variables.set("timestamp", headers.timestamp)
  request.variables.set("requestId", headers.requestId)
%}
POST {{file-service-url}}/stream/sync/upload
Content-Type: multipart/form-data; boundary=WebAppBoundary
X-Request-ID: {{requestId}}
X-Signature: {{signature}}
X-Timestamp: {{timestamp}}
Connection: keep-alive
Accept: */*
Authorization: Bearer {{$auth.token("admin")}}

--WebAppBoundary
Content-Disposition: form-data; name="storageAddress"
Content-Type: text/plain

mail
--WebAppBoundary
Content-Disposition: form-data; name="name"
Content-Type: text/plain

template/zh/verification_code
--WebAppBoundary
Content-Disposition: form-data; name="file"; filename="verification_code.html"
Content-Type: application/json

< ./assets/verification_code.html
--WebAppBoundary--

### 流式文件下载
< {%
  import {generateHeaders} from "./utils"

  const headers = generateHeaders(request.environment.get("file-service-url"))
  request.variables.set("signature", headers.signature)
  request.variables.set("timestamp", headers.timestamp)
  request.variables.set("requestId", headers.requestId)
%}
GET {{file-service-url}}/stream/download?storageAddress=mail&
    name=template/zh/verification_code.html&rename=verification_code.html
Content-Type: application/json
X-Request-ID: {{requestId}}
X-Signature: {{signature}}
X-Timestamp: {{timestamp}}
Connection: keep-alive
Accept: */*
Authorization: Bearer {{$auth.token("admin")}}

### 文件删除
< {%
  import {generateHeaders} from "./utils"

  const headers = generateHeaders(request.environment.get("file-service-url"))
  request.variables.set("signature", headers.signature)
  request.variables.set("timestamp", headers.timestamp)
  request.variables.set("requestId", headers.requestId)
%}
DELETE {{file-service-url}}/stream/remove
Content-Type: application/json
X-Request-ID: {{requestId}}
X-Signature: {{signature}}
X-Timestamp: {{timestamp}}
Connection: keep-alive
Accept: */*
Authorization: Bearer {{$auth.token("admin")}}

{
  "storageAddress": "test",
  "name": "test2.log"
}

### 流式文件获取字符串文件内容
< {%
  import {generateHeaders} from "./utils"

  const headers = generateHeaders(request.environment.get("file-service-url"))
  request.variables.set("signature", headers.signature)
  request.variables.set("timestamp", headers.timestamp)
  request.variables.set("requestId", headers.requestId)
%}
GET {{file-service-url}}/stream/stringContent?storageAddress=mail&
    name=template/zh/verification_code.html
Content-Type: application/json
X-Request-ID: {{requestId}}
X-Signature: {{signature}}
X-Timestamp: {{timestamp}}
Connection: keep-alive
Accept: */*
Authorization: Bearer {{$auth.token("admin")}}
